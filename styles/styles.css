@charset "UTF-8";
/**
  Нормализация блочной модели
 */
*,
::before,
::after {
  box-sizing: border-box;
}

/**
  Убираем внутренние отступы слева тегам списков,
  у которых есть атрибут class
 */
:where(ul, ol):where([class]) {
  padding-left: 0;
}

/**
  Убираем внешние отступы body и двум другим тегам,
  у которых есть атрибут class
 */
body,
:where(blockquote, figure):where([class]) {
  margin: 0;
}

/**
  Убираем внешние отступы вертикали нужным тегам,
  у которых есть атрибут class
 */
:where(h1,
h2,
h3,
h4,
h5,
h6,
p,
ul,
ol,
dl):where([class]) {
  margin-block: 0;
}

:where(dd[class]) {
  margin-left: 0;
}

:where(fieldset[class]) {
  margin-left: 0;
  padding: 0;
  border: none;
}

/**
  Убираем стандартный маркер маркированному списку,
  у которого есть атрибут class
 */
:where(ul[class]) {
  list-style: none;
}

:where(address[class]) {
  font-style: normal;
}

/**
  Обнуляем вертикальные внешние отступы параграфа,
  объявляем локальную переменную для внешнего отступа вниз,
  чтобы избежать взаимодействие с более сложным селектором
 */
p {
  --paragraphMarginBottom: 24px;
  margin-block: 0;
}

/**
  Внешний отступ вниз для параграфа без атрибута class,
  который расположен не последним среди своих соседних элементов
 */
p:where(:not([class]):not(:last-child)) {
  margin-bottom: var(--paragraphMarginBottom);
}

/**
  Упрощаем работу с изображениями
 */
img {
  display: block;
  max-width: 100%;
}

/**
  Наследуем свойства шрифт для полей ввода
 */
input,
textarea,
select,
button {
  font: inherit;
}

html {
  /**
    Пригодится в большинстве ситуаций
    (когда, например, нужно будет "прижать" футер к низу сайта)
   */
  height: 100%;
}

/**
  Плавный скролл
 */
html,
:has(:target) {
  scroll-behavior: smooth;
}

body {
  /**
    Пригодится в большинстве ситуаций
    (когда, например, нужно будет "прижать" футер к низу сайта)
   */
  min-height: 100%;
  /**
    Унифицированный интерлиньяж
   */
  line-height: 1.5;
}

/**
  Приводим к единому цвету svg-элементы
 */
svg *[fill] {
  fill: currentColor;
}

svg *[stroke] {
  stroke: currentColor;
}

/**
  Чиним баг задержки смены цвета при взаимодействии с svg-элементами
 */
svg * {
  transition-property: fill, stroke;
}

/**
  Удаляем все анимации и переходы для людей,
  которые предпочитают их не использовать
 */
@media (prefers-reduced-motion: reduce) {
  *,
  ::before,
  ::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}
@font-face {
  font-family: "Merriweather-Black";
  src: url("./assets/fonts/Merriweather-Black.woff2") format("woff2");
  font-weight: 700;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Merriweather-Regular";
  src: url("./assets/fonts/Merriweather-Regular.woff2") format("woff2");
  font-weight: 400;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Merriweather-Bold";
  src: url("./assets/fonts/Merriweather-Bold.woff2") format("woff2");
  font-weight: 500;
  font-style: normal;
  font-display: swap;
}
:root {
  --c-bg: #191820;
  --c-accent: #ae8bf8;
  --c-light: #ececec;
  --c-white: #ffffff;
  --c-dark-for-shadow: #000;
  --border: 1px solid var(--c-accent);
  --btn-border-radius: 16px;
  --input-border-radius: 10px;
  --card-border-radius: 50px;
  --testimonial-border-radius: 150px;
  --illustration--border-radius-s: 200px;
  --illustration--border-radius-m: 500px;
  --illustration--border-radius-l: 1000px;
  --circle-radius: 50%;
  --box-shadow-3: -4px -4px 12px hsla(0, 0%, 100%, .05), 4px 4px 12px var(--c-dark-for-shadow);
  --box-shadow-3-transparent: -4px -4px 12px hsla(0, 0%, 100%, 0), 4px 4px 12px transparent;
  --box-shadow-inset: inset -22px -14px 14px 2px hsla(0, 0%, 100%, .015), inset 8px 4px 20px 12px rgba(0, 0, 0, .8);
  --box-shadow-inset-transparent: inset -22px -14px 14px 2px hsla(0, 0%, 100%, 0), inset 8px 4px 20px 12px transparent;
  --font-main: "Merriweather-Regular", sans-serif;
  --font-H1: "Merriweather-Black", sans-serif;
  --font-headers: "Merriweather-Bold", sans-serif;
  --container-width: 1376px;
  --container-padding-x: 32px;
  --section-padding-y: 100px;
  --input-height: 70px;
  --btn-height: 71px;
  --transition-duration: .2s;
}

.container {
  max-width: calc(var(--container-width) + var(--container-padding-x) * 2);
  margin-inline: auto;
  padding-inline: var(--container-padding-x);
}

.visually-hidden {
  position: absolute !important;
  width: 1px !important;
  height: 1px !important;
  margin: -1px !important;
  border: 0 !important;
  padding: 0 !important;
  white-space: nowrap !important;
  -webkit-clip-path: inset(100%) !important;
          clip-path: inset(100%) !important;
  clip: rect(0 0 0 0) !important;
  overflow: hidden !important;
}

@media (max-width: 767px) {
  .mobile-hidden {
    display: none !important;
  }
}

@media (min-width: 768px) {
  .mobile-visible {
    display: none !important;
  }
}

body {
  font-family: var(--font-main);
  font-weight: 400;
  font-size: clamp(16px, 1.25vw, 18px);
  line-height: 22.97px;
  color: var(--c-light);
  background-color: var(--c-bg);
}

a,
button,
textarea,
input,
svg * {
  transition-duration: var(--transition-duration);
}

a {
  text-decoration: none;
  color: inherit;
}
@media (hover: hover) {
  a:hover {
    color: var(--c-accent);
  }
}
@media (hover: none) {
  a:active {
    color: var(--c-accent);
  }
}

h1 {
  font-weight: 700;
}

h2,
h3,
h4 {
  font-weight: 500;
}

h1, .h1 {
  font-size: clamp(40px, 5.2777777778vw, 76px);
}

h2, .h2 {
  font-size: clamp(40px, 3.75vw, 54px);
}

h3, .h3 {
  font-size: clamp(24px, 1.9444444444vw, 28px);
}

h4, .h4 {
  font-size: clamp(18px, 1.3888888889vw, 20px);
}/*# sourceMappingURL=styles.css.map */